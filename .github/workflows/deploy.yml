name: Deploy to Vultr Server

on:
  push:
    branches:
      - fight-update-rework # Or your preferred branch for deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16" # Ensure the Node.js version matches the version used in your app

      # Install dependencies
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Build the production frontend
      - name: Build production frontend
        run: yarn prod

      # Set up SSH to connect to Vultr
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # Deploy project files (including the built frontend) to the server
      - name: Deploy project to server
        run: |
          scp -r * ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_APP_DIR }}

      # Install dependencies and start the server on the remote machine
      - name: Install dependencies and start server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            export NVM_DIR=\$HOME/.nvm;
            [ -s \$NVM_DIR/nvm.sh ] && . \$NVM_DIR/nvm.sh;
            nvm use 16;
            
            cd ${{ secrets.SERVER_APP_DIR }};
            yarn install --frozen-lockfile --production;
            
            # Start or reload the server
            pm2 startOrReload ecosystem.config.js --env production;
            pm2 save;
          "
