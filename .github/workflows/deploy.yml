name: Deploy to Vultr Server

on:
  push:
    branches:
      - fight-update-rework # Or your preferred branch for deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up SSH to connect to Vultr
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} # Store your private SSH key in GitHub Secrets

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16" # Ensure the Node.js version matches the version used in your app

      - name: Add server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # Step 4: Copy all project files (including the built frontend) to the server
      - name: Deploy project to server
        run: |
          scp -r * ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_APP_DIR }}

      # Step 5: Log environment variables and verify correct setup
      - name: Verify environment setup on server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            # Ensure NVM is properly loaded by sourcing nvm.sh
            export NVM_DIR=\$HOME/.nvm;
            [ -s \$NVM_DIR/nvm.sh ] && . \$NVM_DIR/nvm.sh;

            # Check and log the environment
            echo 'PATH: \$PATH';
            echo 'NVM_DIR: \$NVM_DIR';
            which node;
            which npm;
            node -v;
            npm -v;
          "

      # Step 6: Install dependencies on the server
      - name: Install dependencies on the server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            # Ensure that the NVM environment is loaded
            export NVM_DIR=\$HOME/.nvm;
            [ -s \$NVM_DIR/nvm.sh ] && . \$NVM_DIR/nvm.sh;

            # Verify nvm, node, and npm
            echo 'NVM_DIR: \$NVM_DIR';
            nvm --version;
            node -v;
            npm -v;

            # Ensure the correct node version is used
            nvm use 16;

            # Install dependencies
            cd ${{ secrets.SERVER_APP_DIR }};
            npm ci --production;
          "

      # Step 7: Restart or start the server
      - name: Restart server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            export NVM_DIR=\$HOME/.nvm;
            [ -s \$NVM_DIR/nvm.sh ] && . \$NVM_DIR/nvm.sh;
            echo 'PATH: \$PATH' && echo 'NVM_DIR: \$NVM_DIR' && which node && which npm && node -v && npm -v;
            cd ${{ secrets.SERVER_APP_DIR }} && pm2 restart server.ts || pm2 start server.ts
          "
