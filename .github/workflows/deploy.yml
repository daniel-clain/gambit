name: Deploy Frontend and Backend to Vultr

on:
  push:
    branches:
      - fight-update-rework # or the branch you want to deploy from (e.g., 'master', 'release')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.11.1"

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer package.json, yarn.lock, favicon.ico manifest.json, ecosystem.config.js, to server
        run: |
          scp package.json yarn.lock favicon.ico manifest.json ecosystem.config.js ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_APP_DIR }}

      - name: SSH into server and install prod dependencies
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "

            sudo -i -u ${{ secrets.SERVER_USER }} bash -c \"
              #specify profile that has node and pm2 installed
              source ~/.bash_profile

              cd ${SERVER_APP_DIR}

              yarn install --frozen-lockfile --production
            \"
          "

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build the backend
        run: yarn build-prod-backend

      - name: Create backend directory on the server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            mkdir -p ${{ secrets.SERVER_APP_DIR }}/production-builds/backend
          "

      - name: Transfer backend build to server
        run: |
          scp -r ./production-builds/backend/* ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_APP_DIR }}/production-builds/backend

      - name: Build frontend
        run: yarn build-prod-frontend

      - name: Create frontend directory on the server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            mkdir -p ${{ secrets.SERVER_APP_DIR }}/production-builds/main-game/
          "

      - name: Transfer frontend build to server
        run: |
          scp -r production-builds/main-game/* ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_APP_DIR }}/production-builds/main-game/

      - name: Create SSL certificates directory on the server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            mkdir -p ${{ secrets.SERVER_APP_DIR }}/sslcert
          "

      - name: Transfer SSL certificates to server
        run: |
          scp -r sslcert ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_APP_DIR }}/sslcert

      - name: SSH into server and reload the app
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            
            sudo -i -u ${{ secrets.SERVER_USER }} bash -c \"
              pm2 startOrReload ecosystem.config.js --env production
              pm2 save
            \"
          "
